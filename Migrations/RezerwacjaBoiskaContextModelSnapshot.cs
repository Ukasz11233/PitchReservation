// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RezerwacjaBoiska.Data;

#nullable disable

namespace RezerwacjaBoiska.Migrations
{
    [DbContext(typeof(RezerwacjaBoiskaContext))]
    partial class RezerwacjaBoiskaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("RezerwacjaBoiska.Models.Boiska", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lokalizacja")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rozmiar")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Boiska");
                });

            modelBuilder.Entity("RezerwacjaBoiska.Models.Gracz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumerTelefonu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gracz");
                });

            modelBuilder.Entity("RezerwacjaBoiska.Models.Opinie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BoiskaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataDodania")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("GraczeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Komentarz")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Ocena")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BoiskaId");

                    b.HasIndex("GraczeId");

                    b.ToTable("Opinie");
                });

            modelBuilder.Entity("RezerwacjaBoiska.Models.Rezerwacje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BoiskaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataRezerwacji")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GodzinaRozpoczecia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GodzinaZakonczenia")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GraczeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BoiskaId");

                    b.HasIndex("GraczeId");

                    b.ToTable("Rezerwacje");
                });

            modelBuilder.Entity("RezerwacjaBoiska.Models.Opinie", b =>
                {
                    b.HasOne("RezerwacjaBoiska.Models.Boiska", "Boiska")
                        .WithMany()
                        .HasForeignKey("BoiskaId");

                    b.HasOne("RezerwacjaBoiska.Models.Gracz", "Gracze")
                        .WithMany()
                        .HasForeignKey("GraczeId");

                    b.Navigation("Boiska");

                    b.Navigation("Gracze");
                });

            modelBuilder.Entity("RezerwacjaBoiska.Models.Rezerwacje", b =>
                {
                    b.HasOne("RezerwacjaBoiska.Models.Boiska", "Boiska")
                        .WithMany()
                        .HasForeignKey("BoiskaId");

                    b.HasOne("RezerwacjaBoiska.Models.Gracz", "Gracze")
                        .WithMany()
                        .HasForeignKey("GraczeId");

                    b.Navigation("Boiska");

                    b.Navigation("Gracze");
                });
#pragma warning restore 612, 618
        }
    }
}
